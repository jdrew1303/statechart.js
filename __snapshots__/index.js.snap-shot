exports['should properly encode expressions 1'] = {
  "contents": {
    "states": [
      {
        "type": "compound",
        "idx": 0,
        "parent": 0,
        "children": [
          1
        ],
        "ancestors": [],
        "completion": [
          1
        ]
      },
      {
        "type": "atomic",
        "idx": 1,
        "onEnter": [
          {
            "type": "raise",
            "props": {
              "event": {
                "type": "literal",
                "value": "bar"
              }
            }
          },
          {
            "type": "log",
            "props": {
              "value": {
                "type": "expr",
                "value": "'foo'"
              }
            }
          },
          {
            "type": "cond",
            "children": [
              {
                "type": "clause",
                "props": {
                  "condition": {
                    "type": "expr",
                    "value": "foo"
                  }
                },
                "children": [
                  {
                    "type": "assign",
                    "props": {
                      "location": {
                        "type": "location",
                        "value": "baz"
                      },
                      "value": {
                        "type": "expr",
                        "value": "foo"
                      }
                    }
                  }
                ]
              },
              {
                "type": "clause",
                "props": {
                  "condition": {
                    "type": "expr",
                    "value": "bar"
                  }
                },
                "children": [
                  {
                    "type": "assign",
                    "props": {
                      "location": {
                        "type": "location",
                        "value": "bang"
                      },
                      "value": {
                        "type": "expr",
                        "value": "bar"
                      }
                    }
                  }
                ]
              },
              {
                "type": "clause",
                "children": [
                  {
                    "type": "assign",
                    "props": {
                      "location": {
                        "type": "location",
                        "value": "foobar"
                      },
                      "value": {
                        "type": "expr",
                        "value": "true"
                      }
                    }
                  },
                  {
                    "type": "send",
                    "props": {
                      "event": {
                        "type": "literal",
                        "value": "external"
                      },
                      "type": {
                        "type": "literal",
                        "value": "testing"
                      }
                    }
                  }
                ]
              }
            ]
          }
        ],
        "parent": 0,
        "children": [],
        "ancestors": [
          0
        ],
        "completion": []
      }
    ]
  },
  "messages": []
}

exports['should parse a xml file 1'] = {
  "type": "root",
  "children": [
    {
      "type": "element",
      "tagName": "scxml",
      "properties": {
        "version": "1.0"
      },
      "children": [
        {
          "type": "element",
          "tagName": "state",
          "properties": {},
          "children": [
            {
              "type": "element",
              "tagName": "script",
              "properties": {},
              "children": [
                {
                  "type": "text",
                  "value": "\n          var foo = 1;\n          <thingy>\n            <test />\n          </thingy>\n        ",
                  "position": {
                    "start": {
                      "line": 8,
                      "column": 17,
                      "offset": 156
                    },
                    "end": {
                      "line": 8,
                      "column": 17,
                      "offset": 156
                    }
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 16,
                  "offset": 55
                },
                "end": {
                  "line": 8,
                  "column": 17,
                  "offset": 156
                }
              }
            }
          ],
          "position": {
            "start": {
              "line": 2,
              "column": 13,
              "offset": 38
            },
            "end": {
              "line": 9,
              "column": 14,
              "offset": 171
            }
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 23,
          "offset": 24
        },
        "end": {
          "line": 10,
          "column": 12,
          "offset": 184
        }
      }
    }
  ],
  "data": {
    "quirksMode": false
  },
  "position": {
    "start": {
      "line": 0,
      "column": 0,
      "offset": 0
    },
    "end": {
      "line": 11,
      "column": 4,
      "offset": 189
    }
  }
}

exports['should support self closing 1'] = {
  "type": "root",
  "children": [
    {
      "type": "element",
      "tagName": "scxml",
      "properties": {
        "datamodel": "ecmascript"
      },
      "children": [
        {
          "type": "element",
          "tagName": "state",
          "properties": {
            "id": "s1"
          },
          "children": [
            {
              "type": "element",
              "tagName": "transition",
              "properties": {
                "event": "foo",
                "target": "s2"
              },
              "children": [],
              "position": {
                "start": {
                  "line": 3,
                  "column": 46,
                  "offset": 104
                },
                "end": {
                  "line": 3,
                  "column": 46,
                  "offset": 104
                }
              }
            }
          ],
          "position": {
            "start": {
              "line": 2,
              "column": 21,
              "offset": 57
            },
            "end": {
              "line": 4,
              "column": 14,
              "offset": 119
            }
          }
        },
        {
          "type": "element",
          "tagName": "state",
          "properties": {
            "id": "s2"
          },
          "children": [],
          "position": {
            "start": {
              "line": 6,
              "column": 23,
              "offset": 144
            },
            "end": {
              "line": 6,
              "column": 23,
              "offset": 144
            }
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 34,
          "offset": 35
        },
        "end": {
          "line": 7,
          "column": 12,
          "offset": 157
        }
      }
    }
  ],
  "data": {
    "quirksMode": false
  },
  "position": {
    "start": {
      "line": 0,
      "column": 0,
      "offset": 0
    },
    "end": {
      "line": 8,
      "column": 4,
      "offset": 162
    }
  }
}

